name: Build, Transfer, and Deploy Billboard Services

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to deploy'
        required: true
        type: choice
        options:
          - web
          - api
          - db

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build and Save Docker Images
        run: |
          ./ops/build.sh
          chmod 644 *.tar
      - name: Upload Docker Images
        uses: actions/upload-artifact@v2
        with:
          name: docker-images
          path: "*.tar"

  deploy-web:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.service == 'web' }}
    steps:
      - name: Download Docker Image for Web
        uses: actions/download-artifact@v2
        with:
          name: docker-images
      - name: Transfer Docker Web Image to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "billboard-web.tar"
          target: "/tmp"
      - name: Deploy Web Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker load -i /tmp/billboard-web.tar
            docker run -d -p ${CADDY_PORT}:${CADDY_PORT} \
              --env CADDY_PORT=${CADDY_PORT} \
              --name billboard-web billboard-web:latest

  deploy-api:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.service == 'api' }}
    steps:
      - name: Download Docker Image for API
        uses: actions/download-artifact@v2
        with:
          name: docker-images
      - name: Transfer Docker API Image to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "billboard-api.tar"
          target: "/tmp"
      - name: Deploy API Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker load -i /tmp/billboard-api.tar
            docker run -d -p ${EXPRESS_PORT}:${EXPRESS_PORT} \
              --env EXPRESS_PORT=${EXPRESS_PORT} \
              --env MONGO_URI=${MONGO_URI} \
              --env GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID} \
              --env GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET} \
              --env GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL} \
              --env JWT_SECRET=${JWT_SECRET} \
              --env JWT_SECRET_HTTP=${JWT_SECRET_HTTP} \
              --name billboard-api billboard-api:latest

  deploy-db:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.service == 'db' }}
    steps:
      - name: Download Docker Image for DB
        uses: actions/download-artifact@v2
        with:
          name: docker-images
      - name: Transfer Docker DB Image to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "billboard-db.tar"
          target: "/tmp"
      - name: Deploy DB Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker load -i /tmp/billboard-db.tar
            docker run -d -p 27017:27017 \
              --volume mongodb:/data/db \
              --name billboard-db billboard-db:latest
