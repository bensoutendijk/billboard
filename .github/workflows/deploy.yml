name: Build, Transfer, and Deploy Billboard Docker Images

on:
  push:
    branches:
      - master

jobs:
  deploy:
    env:
      CADDY_PORT: ${{ vars.CADDY_PORT }}
      EXPRESS_PORT: ${{ vars.EXPRESS_PORT }}
      MONGO_URI: ${{ secrets.MONGO_URI }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_SECRET_HTTP: ${{ secrets.JWT_SECRET_HTTP }}
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Existing Docker Images
        uses: actions/download-artifact@v2
        with:
          name: docker-images
        continue-on-error: true

      - name: Load Downloaded Docker Images
        run: |
          for file in *.tar; do
            [ -f "$file" ] && docker load -i $file || echo "No image file $file found, skipping..."
          done

      - name: Build and Save Docker Images
        run: |
          ./ops/build.sh
          chmod 644 *.tar

      - name: Upload New Docker Images
        uses: actions/upload-artifact@v2
        with:
          name: docker-images
          path: |
            *.tar

      - name: Transfer Docker Files to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "billboard-*.tar,compose.production.yml"
          target: "/tmp/billboard"

      - name: Load Docker Images on Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: CADDY_PORT,EXPRESS_PORT,MONGO_URI,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,GOOGLE_CALLBACK_URL,JWT_SECRET,JWT_SECRET_HTTP
          script: |
            docker load -i /tmp/billboard/billboard-web.tar
            docker load -i /tmp/billboard/billboard-api.tar
            docker load -i /tmp/billboard/billboard-db.tar

            # docker run -d --name billboard-db \
            #   -p "27017:27017" \
            #   --restart always \
            #   billboard-db:latest

            docker run -d --name billboard-api \
              -p "$EXPRESS_PORT:$EXPRESS_PORT" \
              -e EXPRESS_PORT="$EXPRESS_PORT" \
              -e MONGO_URI="$MONGO_URI" \
              -e GOOGLE_CLIENT_ID="$GOOGLE_CLIENT_ID" \
              -e GOOGLE_CLIENT_SECRET="$GOOGLE_CLIENT_SECRET" \
              -e GOOGLE_CALLBACK_URL="$GOOGLE_CALLBACK_URL" \
              -e JWT_SECRET="$JWT_SECRET" \
              -e JWT_SECRET_HTTP="$JWT_SECRET_HTTP" \
              --restart always \
              billboard-api:latest
            
            docker run -d --name billboard-web \
              -p "$CADDY_PORT:$CADDY_PORT" \
              -e CADDY_PORT="$CADDY_PORT" \
              --restart always \
              billboard-web:latest
