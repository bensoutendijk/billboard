name: Build, Transfer, and Deploy Billboard Docker Images

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Docker image cache
        id: cache-download
        uses: actions/download-artifact@v2
        with:
          name: docker-image-cache

      - name: Load Docker images from cache (if exists)
        if: steps.cache-download.outputs.download-path
        run: |
          for file in billboard-*.tar; do
            if [ -f "$file" ]; then
              echo "Loading $file from cache"
              docker load -i "$file"
            fi
          done

      - name: Build and Save Docker Images
        run: |
          ops/build.sh
          chmod 644 billboard-*.tar

      - name: Upload Docker image cache
        uses: actions/upload-artifact@v2
        with:
          name: docker-image-cache
          path: |
            billboard-*.tar

      - name: Transfer Docker Images to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "billboard-*.tar"
          target: "/tmp"

      - name: Load Docker Images on Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            export CADDY_PORT=$CADDY_PORT
            export EXPRESS_PORT=$EXPRESS_PORT
            export MONGO_URI=${{ secrets.MONGO_URI }}
            export GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            export GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            export GOOGLE_CALLBACK_URL=${{ secrets.GOOGLE_CALLBACK_URL }}
            export JWT_SECRET=${{ secrets.JWT_SECRET }}
            export JWT_SECRET_HTTP=${{ secrets.JWT_SECRET_HTTP }}
            export CI=$CI
            ops/run.sh